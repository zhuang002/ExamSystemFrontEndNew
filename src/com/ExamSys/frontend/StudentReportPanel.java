/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ExamSys.frontend;

import com.ExamSys.backend.Role;
import com.ExamSys.backend.User;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 * The report maintanence view.
 * It has a left list of students allowing user to select a student's reports to be maintained.
 * And then user can select one of the student's reports to be viewed.
 * @author yang
 */
public class StudentReportPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentReportPanel
     */
    public StudentReportPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListStudents = new javax.swing.JList<>();
        reportsJPanel = new com.ExamSys.frontend.ReportsJPanel();

        jListStudents.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListStudentsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListStudents);

        jSplitPane1.setLeftComponent(jScrollPane1);
        jSplitPane1.setRightComponent(reportsJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jListStudentsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListStudentsValueChanged
        // TODO add your handling code here:
        if (!evt.getValueIsAdjusting()) {
            int idx=this.jListStudents.getSelectedIndex();
            if (idx>=0) {
                User student=this.students.get(idx);
                this.reportsJPanel.setStudent(student);
            }
        }
    }//GEN-LAST:event_jListStudentsValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jListStudents;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private com.ExamSys.frontend.ReportsJPanel reportsJPanel;
    // End of variables declaration//GEN-END:variables
    private List<User> students=null;
    
    /**
     * Reload the left students list and reload the subviews. 
     * This is used by an admin or a teacher who wants to see all students' reports.
     */
    void reload() {
        if (Global.currentUser==null) {
            this.clear();
        }
        if (Global.currentUser.getRole()==Role.Student) {
            reload(Global.currentUser);
            return;
        }
        this.students=User.getAllUsers(Role.Student);
        DefaultListModel model=new DefaultListModel();
        for (User student:this.students) {
            model.addElement(student);
        }
        this.jListStudents.setModel(model);
        this.reportsJPanel.setStudent(null);
    }

    /**
     * Reload only one student into the view. 
     * This is used when a student user is to view the reports. He/she can only view his/her
     * own reports.
     * @param student 
     */
    void reload(User student) {
        this.students=new ArrayList<>();
        this.students.add(student);
        DefaultListModel model=new DefaultListModel();
        model.addElement(student);
        this.jListStudents.setModel(model);
        this.jListStudents.setSelectedIndex(0);
        
    }

    public void clear() {
        this.students=null;
        ((DefaultListModel)this.jListStudents.getModel()).clear();
        this.reportsJPanel.clear();
    }

    
}
